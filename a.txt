
// 1 - Criação da coleção regiao:
use('TECH_CHALLENGE');

// Cria a coleção de regiões
db.createCollection('TBL_REGIOES', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      required: ['idRegiao', 'nDDDRegiao', 'sSiglaRegiao', 'sNomeRegiao'],
      properties: {
        idRegiao: {
          bsonType: 'int',
          description: 'deve ser um número inteiro e é obrigatório'
        },
        nDDDRegiao: {
          bsonType: 'string',
          description: 'deve ser uma string e é obrigatório'
        },
        sSiglaRegiao: {
          bsonType: 'string',
          description: 'deve ser uma string e é obrigatório'
        },
        sNomeRegiao: {
          bsonType: 'string',
          description: 'deve ser uma string e é obrigatório'
        }
      }
    }
  }
});

// 2 - Criação tabela usuarios:
use('TECH_CHALLENGE');

// Cria uma nova coleção com um índice único em idUsuario.
db.createCollection('TBL_TC_USUARIO', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      required: ['idUsuario', 'sNome', 'sTelefone', 'sEmail', 'dtAtualizacao'],
      properties: {
        idUsuario: {
          bsonType: 'int',
          description: 'deve ser um número inteiro e é obrigatório'
        },
        sNome: {
          bsonType: 'string',
          description: 'deve ser uma string e é obrigatório'
        },
        sTelefone: {
          bsonType: 'string',
          description: 'deve ser uma string e é obrigatório'
        },
        sEmail: {
          bsonType: 'string',
          pattern: '^\\S+@\\S+\\.\\S+$',
          description: 'deve ser uma string no formato de e-mail e é obrigatório'
        },
        dtAtualizacao: {
          bsonType: 'date',
          description: 'deve ser uma data e é obrigatório'
        }
      }
    }
  }
});

// Cria um índice único no campo idUsuario
db.TBL_TC_USUARIO.createIndex({ idUsuario: 1 }, { unique: true });

// 3 - Criação da função região
use('TECH_CHALLENGE');

async function inserirContato(idUsuario, sNome, sTelefone, sEmail) {
  const MongoClient = require('mongodb').MongoClient;
  const uri = 'mongodb://localhost:27017';
  const client = new MongoClient(uri);

  try {
    await client.connect();
    const db = client.db('TECH_CHALLENGE');

    // Extrair DDD do telefone
    const ddd = sTelefone.substring(0, 2);

    // Encontrar a região correspondente ao DDD
    const regiao = await db.collection('TBL_REGIOES').findOne({ nDDDRegiao: ddd });

    if (regiao) {
      // Inserir o contato na coleção TBL_TC_USUARIO
      const result = await db.collection('TBL_TC_USUARIO').insertOne({
        idUsuario: idUsuario,
        sNome: sNome,
        sCodigoRegiao: regiao.sSiglaRegiao,
        sTelefone: sTelefone,
        sEmail: sEmail,
        dtAtualizacao: new Date()
      });
      console.log('Contato inserido com sucesso: ' + result.insertedId);
    } else {
      console.log('Região não encontrada para o DDD fornecido.');
    }
  } catch (err) {
    console.error(err);
  } finally {
    await client.close();
  }
}

// 4 - Insert Região:
use('TECH_CHALLENGE');

// Inserir documentos de todas as regiões do Brasil na coleção TBL_REGIOES
db.getCollection('TBL_REGIOES').insertMany([
  { idRegiao: 1, nDDDRegiao: '11', sSiglaRegiao: 'SP', sNomeRegiao: 'São Paulo' },
  { idRegiao: 2, nDDDRegiao: '21', sSiglaRegiao: 'RJ', sNomeRegiao: 'Rio de Janeiro' },
  { idRegiao: 3, nDDDRegiao: '31', sSiglaRegiao: 'MG', sNomeRegiao: 'Minas Gerais' },
  { idRegiao: 4, nDDDRegiao: '41', sSiglaRegiao: 'PR', sNomeRegiao: 'Paraná' },
  { idRegiao: 5, nDDDRegiao: '51', sSiglaRegiao: 'RS', sNomeRegiao: 'Rio Grande do Sul' },
  { idRegiao: 6, nDDDRegiao: '61', sSiglaRegiao: 'DF', sNomeRegiao: 'Distrito Federal' },
  { idRegiao: 7, nDDDRegiao: '71', sSiglaRegiao: 'BA', sNomeRegiao: 'Bahia' },
  { idRegiao: 8, nDDDRegiao: '81', sSiglaRegiao: 'PE', sNomeRegiao: 'Pernambuco' },
  { idRegiao: 9, nDDDRegiao: '91', sSiglaRegiao: 'PA', sNomeRegiao: 'Pará' },
  { idRegiao: 10, nDDDRegiao: '92', sSiglaRegiao: 'AM', sNomeRegiao: 'Amazonas' },
  { idRegiao: 11, nDDDRegiao: '82', sSiglaRegiao: 'AL', sNomeRegiao: 'Alagoas' },
  { idRegiao: 12, nDDDRegiao: '83', sSiglaRegiao: 'PB', sNomeRegiao: 'Paraíba' },
  { idRegiao: 13, nDDDRegiao: '84', sSiglaRegiao: 'RN', sNomeRegiao: 'Rio Grande do Norte' },
  { idRegiao: 14, nDDDRegiao: '85', sSiglaRegiao: 'CE', sNomeRegiao: 'Ceará' },
  { idRegiao: 15, nDDDRegiao: '86', sSiglaRegiao: 'PI', sNomeRegiao: 'Piauí' },
  { idRegiao: 16, nDDDRegiao: '87', sSiglaRegiao: 'PE', sNomeRegiao: 'Pernambuco (Interior)' },
  { idRegiao: 17, nDDDRegiao: '88', sSiglaRegiao: 'CE', sNomeRegiao: 'Ceará (Interior)' },
  { idRegiao: 18, nDDDRegiao: '89', sSiglaRegiao: 'PI', sNomeRegiao: 'Piauí (Interior)' },
  { idRegiao: 19, nDDDRegiao: '62', sSiglaRegiao: 'GO', sNomeRegiao: 'Goiás' },
  { idRegiao: 20, nDDDRegiao: '63', sSiglaRegiao: 'TO', sNomeRegiao: 'Tocantins' },
  { idRegiao: 21, nDDDRegiao: '64', sSiglaRegiao: 'GO', sNomeRegiao: 'Goiás (Interior)' },
  { idRegiao: 22, nDDDRegiao: '65', sSiglaRegiao: 'MT', sNomeRegiao: 'Mato Grosso' },
  { idRegiao: 23, nDDDRegiao: '66', sSiglaRegiao: 'MT', sNomeRegiao: 'Mato Grosso (Interior)' },
  { idRegiao: 24, nDDDRegiao: '67', sSiglaRegiao: 'MS', sNomeRegiao: 'Mato Grosso do Sul' },
  { idRegiao: 25, nDDDRegiao: '68', sSiglaRegiao: 'AC', sNomeRegiao: 'Acre' },
  { idRegiao: 26, nDDDRegiao: '69', sSiglaRegiao: 'RO', sNomeRegiao: 'Rondônia' },
  { idRegiao: 27, nDDDRegiao: '73', sSiglaRegiao: 'BA', sNomeRegiao: 'Bahia (Interior Sul)' },
  { idRegiao: 28, nDDDRegiao: '74', sSiglaRegiao: 'BA', sNomeRegiao: 'Bahia (Interior Norte)' },
  { idRegiao: 29, nDDDRegiao: '75', sSiglaRegiao: 'BA', sNomeRegiao: 'Bahia (Interior Leste)' },
  { idRegiao: 30, nDDDRegiao: '77', sSiglaRegiao: 'BA', sNomeRegiao: 'Bahia (Interior Oeste)' },
  { idRegiao: 31, nDDDRegiao: '79', sSiglaRegiao: 'SE', sNomeRegiao: 'Sergipe' },
  { idRegiao: 32, nDDDRegiao: '93', sSiglaRegiao: 'PA', sNomeRegiao: 'Pará (Interior Oeste)' },
  { idRegiao: 33, nDDDRegiao: '94', sSiglaRegiao: 'PA', sNomeRegiao: 'Pará (Interior Sudeste)' },
  { idRegiao: 34, nDDDRegiao: '95', sSiglaRegiao: 'RR', sNomeRegiao: 'Roraima' },
  { idRegiao: 35, nDDDRegiao: '96', sSiglaRegiao: 'AP', sNomeRegiao: 'Amapá' },
  { idRegiao: 36, nDDDRegiao: '97', sSiglaRegiao: 'AM', sNomeRegiao: 'Amazonas (Interior)' },
  { idRegiao: 37, nDDDRegiao: '98', sSiglaRegiao: 'MA', sNomeRegiao: 'Maranhão' },
  { idRegiao: 38, nDDDRegiao: '99', sSiglaRegiao: 'MA', sNomeRegiao: 'Maranhão (Interior)' }
]);

// 5 - Insert usuarios
use('TECH_CHALLENGE');

// Lista de contatos a serem inseridos
const contatos = [
  { idUsuario: 1, sNome: 'João da Silva', sTelefone: '11999999999', sEmail: 'joao.silva@example.com' },
  { idUsuario: 2, sNome: 'Maria Oliveira', sTelefone: '21988888888', sEmail: 'maria.oliveira@example.com' },
  { idUsuario: 3, sNome: 'Carlos Souza', sTelefone: '31977777777', sEmail: 'carlos.souza@example.com' },
  { idUsuario: 4, sNome: 'Ana Pereira', sTelefone: '41966666666', sEmail: 'ana.pereira@example.com' },
  { idUsuario: 5, sNome: 'Paulo Lima', sTelefone: '51955555555', sEmail: 'paulo.lima@example.com' },
  { idUsuario: 6, sNome: 'Sandra Costa', sTelefone: '61944444444', sEmail: 'sandra.costa@example.com' },
  { idUsuario: 7, sNome: 'Fernando Alves', sTelefone: '71933333333', sEmail: 'fernando.alves@example.com' },
  { idUsuario: 8, sNome: 'Luciana Ribeiro', sTelefone: '81922222222', sEmail: 'luciana.ribeiro@example.com' },
  { idUsuario: 9, sNome: 'Marcos Dias', sTelefone: '91911111111', sEmail: 'marcos.dias@example.com' },
  { idUsuario: 10, sNome: 'Patrícia Fernandes', sTelefone: '92900000000', sEmail: 'patricia.fernandes@example.com' },
  { idUsuario: 11, sNome: 'Juliana Gomes', sTelefone: '82999999998', sEmail: 'juliana.gomes@example.com' },
  { idUsuario: 12, sNome: 'Ricardo Rocha', sTelefone: '83988888887', sEmail: 'ricardo.rocha@example.com' },
  { idUsuario: 13, sNome: 'Aline Martins', sTelefone: '84977777776', sEmail: 'aline.martins@example.com' },
  { idUsuario: 14, sNome: 'Roberto Silva', sTelefone: '85966666665', sEmail: 'roberto.silva@example.com' },
  { idUsuario: 15, sNome: 'Cláudia Araújo', sTelefone: '86955555554', sEmail: 'claudia.araujo@example.com' },
  { idUsuario: 16, sNome: 'Eduardo Mendes', sTelefone: '87944444443', sEmail: 'eduardo.mendes@example.com' },
  { idUsuario: 17, sNome: 'Elaine Castro', sTelefone: '88933333332', sEmail: 'elaine.castro@example.com' },
  { idUsuario: 18, sNome: 'Sérgio Barros', sTelefone: '89922222221', sEmail: 'sergio.barros@example.com' },
  { idUsuario: 19, sNome: 'Márcia Teixeira', sTelefone: '63911111110', sEmail: 'marcia.teixeira@example.com' },
  { idUsuario: 20, sNome: 'Adriana Faria', sTelefone: '65900000009', sEmail: 'adriana.faria@example.com' }
];

// Função para extrair o DDD e encontrar a região correspondente
async function getRegiao(sTelefone) {
  const ddd = sTelefone.substring(0, 2);
  const regiao = await db.TBL_REGIOES.findOne({ nDDDRegiao: ddd });
  return regiao ? regiao.sSiglaRegiao : null;
}

// Função para inserir contatos com associação automática de DDD
async function inserirContatos() {
  for (const contato of contatos) {
    const sCodigoRegiao = await getRegiao(contato.sTelefone);
    if (sCodigoRegiao) {
      contato.sCodigoRegiao = sCodigoRegiao;
      contato.dtAtualizacao = new Date();
      await db.TBL_TC_USUARIO.insertOne(contato);
      console.log('Contato inserido com sucesso: ' + contato.idUsuario);
    } else {
      console.log('Região não encontrada para o DDD: ' + contato.sTelefone.substring(0, 2));
    }
  }
}

// Executar a função de inserção
inserirContatos();
